name: Release
on:
  issues:
    types:
      - labeled
jobs:
  create-release:
    runs-on: ubuntu-latest
    timeout-minutes: 10
    if: ${{ startsWith(github.event.label.name, 'release:') && github.event.issue.state == 'open'}}
    steps:
      - name: Install semver
        run: sudo apt-get install -y node-semver
      - uses: actions/github-script@0.9.0
        name: Validate Labels
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            if (context.payload.issue.labels.length > 1) {
              const error_msg = "More than one label provided"
              console.log(`::set-env name=ERROR_MESSAGE::${error_msg}`)
              throw new Error(error_msg)
            }
      - uses: actions/github-script@0.9.0
        name: Determine bump level
        id: determine-bump-level
        env:
          LABEL_PREFIX: 'release:'
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            /*
              the prefix of the label
            */
            const increment_level = context.payload.issue.labels.find(label => label.name.startsWith(process.env.LABEL_PREFIX) )

            if (!increment_level) {
              const error_msg = "Please add a bump Version"
              console.log(`::set-env name=ERROR_MESSAGE::${error_msg}`)
              throw new Error(error_msg)
            }

            const bump_level = increment_level.name.substr(process.env.LABEL_PREFIX.length)
            console.log(`Detected bump level ${bump_level}`)
            console.log(`::set-env name==BUMP_LEVEL::${bump_level}`)
      - uses: actions/github-script@0.9.0
        name: Comment release start
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let message = ":pray: Release process started ... this may take a while :hourglass_flowing_sand:"

            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })
      - name: Setup Git Repo
        run: |
          git clone https://${GITHUB_ACTOR}:${{secrets.WRITE_TO_REPO_PERSONAL_ACCESS_TOKEN}}@github.com/${GITHUB_REPOSITORY}.git .
          git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config user.name "Release-Bot"
      - name: Determine release version
        run: |
          echo "Triggering a $BUMP_LEVEL release"

          version=`./gradlew properties -q | grep "^version:" | awk '{print $2}'`
          newversion=`semver -i $BUMP_LEVEL $version`

          echo "Current version: $version New version: $newversion"
          echo "::set-env name=NEW_VERSION::${newversion}"

      - uses: actions/github-script@0.9.0
        name: Comment release version
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let message = ":bookmark: Release '$newversion' will be created"

            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: message
            })

      - name: Bump version + Tag
        run: ./gradlew release -Prelease.useAutomaticVersion=true -Prelease.releaseVersion=$NEW_VERSION
      - name: Merge to master
        run: |
          git checkout master
          git merge release
          git push origin master

      - uses: actions/github-script@0.9.0
        name: Comment Issue
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `ðŸŽ‰ Deployment has been successful dispatched version ${process.env.NEW_VERSION}! ðŸš€`
            })
            await github.issues.update({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              state: "closed"
            });
      - uses: actions/github-script@0.9.0
        name: Comment Error to Issue
        if: ${{ failure() }}
        env:
          ERROR_MESSAGE: ${{ env.ERROR_MESSAGE}}
        with:
          github-token: ${{secrets.GITHUB_TOKEN}}
          script: |
            let message = "The Wokflow failed due to some errors"
            if (process.env.ERROR_MESSAGE) {
               message = process.env.ERROR_MESSAGE
            }

            await github.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: `:boom: ${message} :exclamation:`
            })